<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-04-22T18:28:13 IST" name="Suite" finished-at="2022-04-22T18:28:31 IST" duration-ms="18101">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.Runner@7331196b]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2022-04-22T18:28:13 IST" name="ThreeTest" finished-at="2022-04-22T18:28:21 IST" duration-ms="8056">
      <class name="tests.ThreeTest">
        <test-method signature="testThree()[pri:0, instance:tests.ThreeTest@12f9af83]" started-at="2022-04-22T18:28:13 IST" name="testThree" finished-at="2022-04-22T18:28:21 IST" duration-ms="7814" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at tests.ThreeTest.testThree(ThreeTest.java:18)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testThree -->
      </class> <!-- tests.ThreeTest -->
    </test> <!-- ThreeTest -->
    <test started-at="2022-04-22T18:28:13 IST" name="TwoTest" finished-at="2022-04-22T18:28:25 IST" duration-ms="12208">
      <class name="tests.TwoTest">
        <test-method signature="testTwo()[pri:0, instance:tests.TwoTest@5f9be66c]" started-at="2022-04-22T18:28:13 IST" name="testTwo" finished-at="2022-04-22T18:28:22 IST" duration-ms="8815" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTwo -->
      </class> <!-- tests.TwoTest -->
      <class name="runner.Runner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:runner.Runner@7331196b]" started-at="2022-04-22T18:28:22 IST" name="setUpClass" finished-at="2022-04-22T18:28:22 IST" duration-ms="157" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@78383390]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.Runner@7331196b]" started-at="2022-04-22T18:28:22 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-04-22T18:28:25 IST" duration-ms="3209" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login with valid credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Application Login]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:runner.Runner@7331196b]" started-at="2022-04-22T18:28:25 IST" name="tearDownClass" finished-at="2022-04-22T18:28:25 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runner.Runner -->
    </test> <!-- TwoTest -->
    <test started-at="2022-04-22T18:28:13 IST" name="LoginTest" finished-at="2022-04-22T18:28:31 IST" duration-ms="18100">
      <class name="tests.LoginTest">
        <test-method is-config="true" signature="openApplication()[pri:0, instance:tests.LoginTest@19835e64]" started-at="2022-04-22T18:28:13 IST" name="openApplication" finished-at="2022-04-22T18:28:17 IST" duration-ms="4247" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method signature="login(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tests.LoginTest@19835e64]" started-at="2022-04-22T18:28:17 IST" name="login" data-provider="getLoginData" finished-at="2022-04-22T18:28:18 IST" duration-ms="918" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[phaniatw2@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[atw@123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[successfull]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@19835e64]" started-at="2022-04-22T18:28:18 IST" name="tearDown" finished-at="2022-04-22T18:28:18 IST" duration-ms="96" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="openApplication()[pri:0, instance:tests.LoginTest@19835e64]" started-at="2022-04-22T18:28:18 IST" name="openApplication" finished-at="2022-04-22T18:28:20 IST" duration-ms="1995" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method signature="login(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:tests.LoginTest@19835e64]" started-at="2022-04-22T18:28:20 IST" name="login" data-provider="getLoginData" finished-at="2022-04-22T18:28:31 IST" duration-ms="10727" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sample@test.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[test@123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Failure]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.LoginTest@19835e64]" started-at="2022-04-22T18:28:31 IST" name="tearDown" finished-at="2022-04-22T18:28:31 IST" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.LoginTest -->
    </test> <!-- LoginTest -->
  </suite> <!-- Suite -->
</testng-results>
